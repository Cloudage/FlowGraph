name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    # Linux: Install dependencies for headless testing
    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libgl1-mesa-dev
    
    - name: Configure CMake
      run: cmake -B build -DFLOWGRAPH_BUILD_TESTS=ON -DFLOWGRAPH_BUILD_EXAMPLES=ON
      
    - name: Build
      run: cmake --build build --config Release
      
    - name: Test
      run: ctest --test-dir build --output-on-failure
      
  build-and-test-ui:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    # Linux: Install dependencies for headless testing
    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libgl1-mesa-dev
    
    - name: Configure CMake with UI Tests
      run: cmake -B build -DFLOWGRAPH_BUILD_TESTS=ON -DFLOWGRAPH_BUILD_EXAMPLES=ON -DBUILD_EDITOR=ON -DBUILD_EDITOR_TESTS=ON
      
    - name: Build with UI Tests
      run: cmake --build build --config Release
      
    - name: Run Core Tests
      run: ctest --test-dir build --output-on-failure -E "editor_ui_tests"
      
    - name: Run UI Tests (Linux)
      if: runner.os == 'Linux'
      run: |
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        sleep 3
        ctest --test-dir build --output-on-failure -R "editor_ui_tests" --timeout 120
      
    - name: Run UI Tests (Windows/macOS)
      if: runner.os != 'Linux'
      run: ctest --test-dir build --output-on-failure -R "editor_ui_tests" --timeout 120
      
  swift-package:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Swift Package
      run: swift build
      
    - name: Test Swift Package
      run: swift test